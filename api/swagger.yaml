---
swagger: "2.0"
info:
  description: "This is a the API for The Code For Europe Transparent Water Initiative"
  version: "1.0.0"
  title: "Water-api"
  contact:
    name: "info@codefor.eu"
  license:
    name: "GPL-3.0"
    url: "https://raw.githubusercontent.com/codeforeurope/water-api/master/LICENSE"
basePath: "/api"
paths:
  /companies:
    get:
      tags:
      - "companies"
      summary: "Get companies"
      description: "Get companies"
      operationId: "getcompanies"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        500:
          description: "Server error"
      x-swagger-router-controller: "Company"
  /company:
    get:
      tags:
      - "company"
      summary: "Get company"
      description: "Get company"
      operationId: "getcompany"
      parameters:
      - name: "code"
        in: "query"
        description: "code value that needs to be considered for filter"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        type: "string"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"

      responses:
        404:
          description: "Not found"
      x-swagger-router-controller: "Company"
    post:
      tags:
      - "company"
      summary: "Add a company"
      description: ""
      operationId: "postcompany"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Company object that needs to be added to the database"
        required: false
        schema:
          $ref: "#/definitions/Company"
      responses:
        405:
          description: "Company exists"
      x-swagger-router-controller: "Company"
  /location:
    get:
      tags:
      - "location"
      summary: "Get details of a tap, pump, facility or measurement location"
      description: "Multiple parameters can be provided"
      operationId: "getlocation"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Location"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "Location"
    post:
      tags:
      - "location"
      summary: "Add a tap, pump, facility or measurement location"
      description: ""
      operationId: "postlocation"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Location object that needs to be added to the database"
        required: false
        schema:
          $ref: "#/definitions/Location"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Location"
    put:
      tags:
      - "location"
      summary: "Update a location"
      description: ""
      operationId: "putlocation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Location object that needs to be updated"
        required: false
        schema:
          $ref: "#/definitions/Location"
      responses:
        400:
          description: "Invalid operation"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "Location"
    delete:
      tags:
      - "location"
      summary: "Delete a location"
      description: ""
      operationId: "deletelocation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: false
        schema:
          $ref: "#/definitions/Location"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "Location"
  /locations:
    get:
      tags:
      - "locations"
      summary: "Get a list of locations"
      description: "Multiple parameters can be provided"
      operationId: "getlocations"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Location"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "Location"
  /limits:
    get:
      tags:
      - "limits"
      summary: "Get legal limits"
      description: "Get an array of legal limits (US, EU)"
      operationId: "getlimits"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "Legallimits"
  /limit:
    get:
      tags:
      - "limit"
      summary: "Get legal limits for given Code"
      description: "Get an legal limit (US, EU or otherwise defined in the database)"
      operationId: "getlimit"
      parameters:
      - name: "code"
        in: "query"
        description: "code value that needs to be considered for filter"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        type: "string"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "Legallimits"
    post:
      tags:
      - "limit"
      summary: "Post new legal limit"
      description: "Post a new legal limit"
      operationId: "postlimit"
      parameters:
      - in: "body"
        name: "body"
        description: "Limit set that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Limit"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "Legallimits"
  /zone:
    get:
      tags:
      - "zone"
      summary: "Get zone at coordinates"
      description: "Get a zone at the given coordinates"
      operationId: "getzone"
      parameters:
      - in: "query"
        name: "lat"
        description: "Latitude"
        required: true
        type: "number"
        format: "float"
      - in: "query"
        name: "lon"
        description: "Longitude"
        required: true
        type: "number"
        format: "float"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Zone"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "Zone"
    post:
      tags:
      - "zone"
      summary: "Post new zone"
      description: "Post a new zone"
      operationId: "postzone"
      parameters:
      - in: "body"
        name: "body"
        description: "Limit set that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Zone"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Zone"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "Zone"
  /products:
    get:
      tags:
      - "products"
      summary: "Get a list of products"
      description: "Multiple parameters can be provided"
      operationId: "getproducts"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "Product"
  /product/{id}:
    get:
      tags:
      - "product"
      summary: "Get details of a product"
      description: "Multiple parameters can be provided"
      operationId: "getproduct"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id that need to be considered for filter"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "Product"
  /product:
    post:
      tags:
      - "product"
      summary: "Add a product"
      description: ""
      operationId: "postproduct"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object with observations that needs to be added to the database"
        required: false
        schema:
          $ref: "#/definitions/Product"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Product"
    put:
      tags:
      - "product"
      summary: "Update a product"
      description: ""
      operationId: "putproduct"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Product that needs to be updated"
        required: false
        schema:
          $ref: "#/definitions/Product"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Product"
    delete:
      tags:
      - "product"
      summary: "Delete a product"
      description: ""
      operationId: "delete"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Product that needs to be deleted"
        required: false
        schema:
          $ref: "#/definitions/Product"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Product"
  /report:
    post:
      tags:
      - "report"
      summary: "Add a report"
      description: "A report is a defined set of observations belonging to a zone"
      operationId: "postreport"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Report object with observations that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Report"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Report"
  /jurisdiction:
    get:
      tags:
      - "jurisdiction"
      summary: "Get jurisdiction for a given area"
      description: ""
      operationId: "getjurisdiction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "q"
        description: "Search query"
        required: false
        type: "string"
      - in: "query"
        name: "lat"
        description: "Latitude"
        required: false
        type: "number"
        format: "float"
      - in: "query"
        name: "lon"
        description: "Longitude"
        required: false
        type: "number"
        format: "float"
      responses:
        405:
          description: "Invalid input"
        502:
          description: "Geocoder unavailable"
      x-swagger-router-controller: "Jurisdiction"
definitions:
  Company:
    description: "A business involved in producing and/or distributing water and/or involved in drinking water in any sense of the word (for instance, providing taps or generating water quality reports)"
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      code:
        type: "string"
      name:
        type: "string"
      url:
        type: "string"
      country:
        type: "string"
  Limit:
    description: "A given standard for the maximum allowed quantity of observations of a certain type. There are different limits for instance for Europe and the US. Other limits can be added."
    type: "object"
    properties:
      name:
        type: "string"
      authority:
        type: "string"
      limits:
        type: "array"
        items:
          $ref: "#/definitions/Observation"
      sources:
        type: "array"
        items:
          type: "string"
  Location:
    description: "A location relevant to the system. Can be a Tap, Pump, Facility or Measurement location. Has information about access (public, restricted, commercial)"
    type: "object"
    required:
    - "name"
    - "geometry"
    properties:
      name:
        type: "string"
        example: "Measurement location"
      geometry:
        $ref: "#/definitions/Point"
  Observation:
    description: "An observation of quantities of a certain entity, given in unit of measure. Observations can be part of limits, reports and products."
    type: "object"
    required:
    - "code"
    - "uom"
    - "value"
    properties:
      value:
        type: "number"
        format: "float"
        example: 1.5
      uom:
        type: "string"
        example: "mg_l"
      code:
        type: "string"
        example: "natrium"
  Point:
    description: "geojson [Point](http://geojson.org/geojson-spec.html#id2)"
    type: "object"
    properties:
      type:
        type: "string"
        example: "Point"
      coordinates:
        example: "[100.0, 0.0]"
        type: "array"
        items:
          type: "number"
          format: "float"
  Polygon:
    description: "geojson [Polygon](http://geojson.org/geojson-spec.html#id2)"
    type: "object"
    properties:
      type:
        type: "string"
        example: "Polygon"
      coordinates:
        example: "[[[100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0]]]"
        type: "array"
        items:
          type: "array"
          items:
            type: "array"
            items:
              type: "number"
              format: "float"
  Product:
    description: "A bottled water product. Observations on a product are what people can read from labels or measure themselves with a device."
    type: "object"
    properties:
      name:
        type: "string"
      vendor:
        type: "string"
      volume:
        type: "number"
        format: "float"
      observations:
        type: "array"
        items:
          $ref: "#/definitions/Observation"
      sources:
        type: "array"
        items:
          type: "string"
  Report:
    description: "An (official) report regarding water quality in a certain zone or on a location."
    type: "object"
    required:
      - "zone"
    properties:
      name:
        type: "string"
      authority:
        type: "string"
      zone:
        type: "string"
      observations:
        type: "array"
        items:
          $ref: "#/definitions/Observation"
      sources:
        type: "array"
        items:
          type: "string"
  Zone:
    description: "An area that is serviced by a single Drinkwater-facility. Should be a polygon that encloses all the piping running from the given facility."
    type: "object"
    properties:
      name:
        type: "string"
      geometry:
        $ref: "#/definitions/Polygon"
